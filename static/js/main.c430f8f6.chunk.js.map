{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","validated","useState","Math","random","toString","slice","id","touched","setTouched","hasError","handleChange","fieldName","str","trim","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","onAdd","count","increaseCount","newMovie","setMovie","addMovieField","key","urlPattern","validateUrl","url","test","allFieldsAreValid","onSubmit","preventDefault","handleSubmit","disabled","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"oSAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,aAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAf,0BA5BkC,ECE7BC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,OAFE,KAFsB,E,+BCMpC,IAAMC,EAA6B,SAAC,GAOpC,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,MAKI,IAJJC,aAII,MAJIF,EAIJ,MAHJG,gBAGI,aAFJC,gBAEI,MAFO,WAAQ,EAEf,EADJC,EACI,EADJA,UAEA,EAAaC,oBAAS,2BAASN,EAAT,YAXfO,KAAKC,SAASC,WAAWC,MAAM,GAWhB,IAAfC,EAAP,oBAEA,EAA8BL,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACMC,EAAWT,EACbO,IAAYP,EAAUJ,GACtBW,GAAWT,IAAaF,EAEtBc,EAAe,SAACC,EAAmBC,GACpB,KAAfA,EAAIC,OACNd,EAASY,EAAWC,GAEpBb,EAASY,EAAWC,EAAIC,OAE3B,EAED,OACE,sBAAK/B,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQgC,QAASR,EAAlC,SACGT,IAGH,qBAAKf,UAAU,UAAf,SACE,uBACEwB,GAAIA,EACJ,0BAAkBX,GAClBb,UAAWiC,IAAW,QAAS,CAC7B,YAAaN,IAEfO,KAAK,OACLC,YAAW,gBAAWpB,GACtBD,MAAOA,EACPG,SAAU,SAAAmB,GAAK,OAAIR,EAAaf,EAAMuB,EAAMC,OAAOvB,MAApC,EACfwB,OAAQ,kBAAMZ,GAAW,EAAjB,MAIXC,GACC,mBAAG3B,UAAU,iBAAb,SAA+BkB,EAAY,oBAAH,UAA4BH,EAA5B,oBAI/C,ECzDYwB,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,EAA+BrB,mBAAS,GAAxC,mBAAOsB,EAAP,KAAcC,EAAd,KACA,EAA6BvB,mBAAS,CACpCf,MAAO,GACPC,YAAa,GACbH,OAAQ,GACRK,QAAS,GACTI,OAAQ,KALV,mBAAOgC,EAAP,KAAiBC,EAAjB,KASExC,EAKEuC,EALFvC,MACAC,EAIEsC,EAJFtC,YACAH,EAGEyC,EAHFzC,OACAK,EAEEoC,EAFFpC,QACAI,EACEgC,EADFhC,OAGIkC,EAAgB,SAACC,EAAahC,GAClC8B,EAAS,2BACJD,GADG,kBAELG,EAAMhC,IAEV,EAGKiC,EAAa,uKACbC,EAAc,SAACC,GACnB,OAAOF,EAAWG,KAAKD,EACxB,EAEKE,EAAoB/C,GAASO,GAC5BqC,EAAYzC,IAAYyC,EAAY9C,GAc3C,OACE,uBACEF,UAAU,WAEVoD,SAAU,SAAChB,GAAD,OAjBO,SAACA,GACpBA,EAAMiB,iBACNX,EAAcD,EAAQ,GACtBD,EAAMG,GACNC,EAAS,CACPxC,MAAO,GACPC,YAAa,GACbH,OAAQ,GACRK,QAAS,GACTI,OAAQ,IAEX,CAMwB2C,CAAalB,EAAxB,EAHZ,UAKE,oBAAIpC,UAAU,QAAd,yBACA,cAAC,EAAD,CACEa,KAAK,QACLE,MAAM,QACND,MAAOV,EACPa,SAAU4B,EACV7B,UAAQ,IAGV,cAAC,EAAD,CACEH,KAAK,cACLE,MAAM,cACND,MAAOT,EACPY,SAAU4B,IAGZ,cAAC,EAAD,CACEhC,KAAK,SACLE,MAAM,YACND,MAAOZ,EACPe,SAAU4B,EACV7B,UAAQ,EACRE,UAAW8B,IAGb,cAAC,EAAD,CACEnC,KAAK,UACLE,MAAM,WACND,MAAOP,EACPU,SAAU4B,EACV7B,UAAQ,EACRE,UAAW8B,IAGb,cAAC,EAAD,CACEnC,KAAK,SACLE,MAAM,UACND,MAAOH,EACPM,SAAU4B,EACV7B,UAAQ,IAGV,qBAAKhB,UAAU,mBAAf,SACE,qBAAKA,UAAU,UAAf,SACE,wBACEkC,KAAK,SACL,UAAQ,gBACRlC,UAAU,iBACVuD,UAAWJ,EAJb,uBA/CCV,EA2DV,E,OC7GYe,EAAM,WACjB,MAA2BrC,mBAASsC,GAApC,mBAAOhD,EAAP,KAAemC,EAAf,KAKA,OACE,sBAAK5C,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAEtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CAAUwC,MAVF,SAACzC,GACb6C,EAAS,GAAD,mBAAKa,GAAL,CAAuB1D,IAChC,QAYF,ECnBD2D,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.c430f8f6.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (key: string, newValue: string) => void,\n  validated?: (url: string) => boolean\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n  validated,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const hasError = validated\n    ? touched && !validated(value)\n    : touched && required && !value;\n\n  const handleChange = (fieldName: string, str: string) => {\n    if (str.trim() !== '') {\n      onChange(fieldName, str);\n    } else {\n      onChange(fieldName, str.trim());\n    }\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => handleChange(name, event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{validated ? 'Enter correct URL' : `${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { FormEvent, useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  onAdd: (movie: Movie) => void;\n}\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, increaseCount] = useState(0);\n  const [newMovie, setMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  } = newMovie;\n\n  const addMovieField = (key: string, value: string) => {\n    setMovie({\n      ...newMovie,\n      [key]: value,\n    });\n  };\n\n  // eslint-disable-next-line max-len\n  const urlPattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n  const validateUrl = (url: string): boolean => {\n    return urlPattern.test(url);\n  };\n\n  const allFieldsAreValid = title && imdbId\n      && validateUrl(imdbUrl) && validateUrl(imgUrl);\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    increaseCount(count + 1);\n    onAdd(newMovie);\n    setMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={(event) => handleSubmit(event)}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={addMovieField}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={addMovieField}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={addMovieField}\n        required\n        validated={validateUrl}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={addMovieField}\n        required\n        validated={validateUrl}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={addMovieField}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!allFieldsAreValid}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovie] = useState(moviesFromServer);\n  const onAdd = (movie: Movie) => {\n    setMovie([...moviesFromServer, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}